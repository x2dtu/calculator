:root {
    --btn-diameter: 4rem;
    --grid-gap: 1rem;
    --max-width: 22rem; /* var(--btn-diameter) * 4 + var(--grid-gap) * 3 + 2 * .container:padding */
    --green: rgb(100, 212, 85);
    --blue: rgb(0, 131, 253);
    --light-gray: rgb(230, 230, 230);
    --yelow: rgb(233, 233, 39);
}

*, *::before, *::after {
    margin: 0;
    box-sizing: border-box;
}
body {
    background-color: rgba(170, 170, 170, 0.7);
}
.container {
    margin: 3em;
    display: flex;
    flex-direction: column;
    max-width: var(--max-width);
    border: 5px solid black;
    border-radius: 1em;
    padding: 1rem;
    background-color: lightblue;
}

.answerScreen {
    display: flex;
    flex-direction: column;
    background-color: rgba(30, 30, 30, 0.3);
    padding: 0.5rem;
    min-height: 6rem;
    margin-bottom: 1rem;
    align-items: flex-end;
    justify-content: space-around;
    word-wrap: break-word;
    word-break: break-all;
    color: white;
}

.problem {
    font-size: 1.75em;
}

.answer {
    font-size: 1.4em;
}

.touchpad {
    display: grid;
    grid-template-columns: repeat(4, minmax(var(--btn-diameter), 1fr));
    grid-gap: var(--grid-gap);
}

.history {
    margin-top: 1rem;
    background-color: var(--light-gray);
    width: 19.375rem;
    height: 29rem;
    border-radius: 1rem;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    overflow-y: auto;
}

.clearHistory {
    display: inline-flex;
    align-items: center; 
    background-color: var(--green);
    color: black;
    align-self: center;
    justify-self: flex-start;
    border-radius: 1rem;
    border: none;
    transition: 1ms ease all;
    font-size: 1.125rem;
    padding: 0.5rem;
    margin-top: 0.5rem;
    max-height: 2.3rem;
    margin-bottom: 0.5rem;
}

.clearHistory:hover, .pastProblem:hover, .pastAnswer:hover {
    align-items: center; 
}

.pastContainer {
    display: flex;
    flex-wrap: wrap;
}

.pastProblem, .pastAnswer {
    background-color: var(--light-gray);
    display: inline-flex;
    align-items: center; 
    font-size: 1rem;
    padding: 0.5rem;
    border-radius: 1rem;
    border: none;
    transition: 1ms ease all;
    /* max-height: 2.125rem; */
    word-break: break-all;
}

.pastProblem:hover, .pastAnswer:hover {
    padding: 0.3rem;
}

.seperator {
    margin-top: -1rem;
}

.pastProblem {
    color: black;
    margin-left: 0.25rem;
    margin-right: 0;
}

.pastAnswer {
    margin-left: 0;
    color: var(--green);
}

.touchpad button {
    cursor: pointer;
    height: var(--btn-diameter);
    width: var(--btn-diameter);
    border-radius: 100%;
    border: none;
    transition: 1ms ease all;
    font-size: 1.5rem;
    background-color: rgba(128, 128, 128, 0.6);
    color: white;
    /* -webkit-text-stroke-width: 0.5px;
    -webkit-text-stroke-color: black; */
}

button:hover {
    border: 3px solid black;
    background-color: white;
    color: black;
}

button:focus {
    border: 3px solid black;
}

#equals {
    background-color: var(--green);
    color: white;
}

#clear {
    color: red;
    background-color: var(--light-gray);
}

#clear:hover {
    color: black;
    background-color: white;
}

.operation {
    color: var(--green);
    font-size: 2rem;
}

.touchpad > .second {
    background-color: var(--blue);
}

.second:hover {
    background-color: var(--blue);
}

.touchpad > .third {
    background-color: var(--green);
}

.third:hover {
    background-color: var(--green);
}

#rad {
    color: rgb(255, 187, 0);
}
.mode{
    font-size: 0.5em;
    margin-top: -1.125em;
}
#rad:hover {
    color: black;
}

.touchpad > .clock {
    background-color: var(--yelow);
    color: gray;
}

.clock:hover {
    background-color: var(--yelow);
    color: black
}

.shortenedProblem {
    font-size: 1.25rem;
}

.evenShorter {
    font-size: 1rem;;
}